apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backend-chart.fullname" . }}
  labels:
    {{- include "backend-chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "backend-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "backend-chart.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            # Database connection
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}"
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.database.user | quote }}
            - name: SPRING_DATASOURCE_PASSWORD
              value: {{ .Values.database.password | quote }}
            - name: SPRING_DATASOURCE_DRIVER_CLASS_NAME
              value: "org.postgresql.Driver"
            
            # JPA/Hibernate settings
            - name: SPRING_JPA_HIBERNATE_DDL_AUTO
              value: "update"
            - name: SPRING_JPA_SHOW_SQL
              value: "true"
            - name: SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT
              value: "org.hibernate.dialect.PostgreSQLDialect"
            - name: SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL
              value: "true"
            - name: SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_LOB_NON_CONTEXTUAL_CREATION
              value: "true"
            
            # Server settings
            - name: SERVER_PORT
              value: {{ .Values.env.SERVER_PORT | quote }}
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.env.SPRING_PROFILES_ACTIVE | quote }}
            
            # Application name
            - name: SPRING_APPLICATION_NAME
              value: "student-management-api"
              
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          
          {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            {{- toYaml .Values.healthCheck.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.healthCheck.readinessProbe | nindent 12 }}
          {{- end }}
          
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
            
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}